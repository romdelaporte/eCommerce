services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /app/entrypoint.sh
    volumes:
      - ./ecommerce:/app/ecommerce
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - rabbitmq
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DEVELOPMENT_MODE=${DEVELOPMENT_MODE}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//

  # celery_worker:
  #   build:
  #     context: .
  #     dockerfile: Docker/Dockerfile
  #   image: django_celery_example_celery_worker
  #   command: /start-celeryworker
  #   volumes:
  #     - ./ecommerce:/app
  #   env_file:
  #     - ./.env/.dev-sample
  #   depends_on:
  #     - redis
  #     - db
  
  # celery_beat:
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/django/Dockerfile
  #   image: django_celery_example_celery_beat
  #   command: /start-celerybeat
  #   volumes:
  #     - ./ecommerce:/app
  #   env_file:
  #     - ./.env/.dev-sample
  #   depends_on:
  #     - redis
  #     - db
  
  # flower:
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/django/Dockerfile
  #   image: django_celery_example_celery_flower
  #   command: /start-flower
  #   volumes:
  #     - ./ecommerce:/app
  #   env_file:
  #     - ./.env/.dev-sample
  #   ports:
  #     - 5557:5555
  #   depends_on:
  #     - redis
  #     - db

  redis:
    image: redis:alpine
    
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest